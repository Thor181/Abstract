### ActionResult ###
ContentResult: отправляет в ответ в виде строки
EmptyResult: отправляет пустой ответ в виде статусного кода 200
NoContentResult: во многом похож на EmptyResult, также отправляет пустой ответ, только в виде статусного кода 204
FileResult: является базовым классом для всех объектов, которые пишут набор байтов в выходной поток. Предназначен для отправки файлов
FileContentResult: класс, производный от FileResult, пишет в ответ массив байтов
VirtualFileResult: также производный от FileResult класс, пишет в ответ файл, находящийся по заданному пути
PhysicalFileResult: также производный от FileResult класс, пишет в ответ файл, находящийся по заданному пути. Только в отличие от предыдущего класса использует физический путь, а не виртуальный.
FileStreamResult: класс, производный от FileResult, пишет бинарный поток в выходной ответ
ObjectResult: возвращает произвольный объект, как правило, применяется в качестве базового класса для других классов результатов. Но можно применять и самостоятельно:
StatusCodeResult: результат действия, который возвращает клиенту определенный статусный код HTTP
UnauthorizedResult: класс, производный от StatusCodeResult. Возвращает клиенту ответ в виде статусного кода HTTP 401, указывая, что пользователь не прошел авторизацию и не имеет прав доступа к запрошенному ресурсу.
NotFoundResult: производный от StatusCodeResult. Возвращает клиенту ответ в виде статусного кода HTTP 404, указывая, что запрошенный ресурс не найден
NotFoundObjectResult: производный от ObjectResult. Также возвращает клиенту ответ в виде статусного кода HTTP 404 с дополнительной информацией
BadRequestResult: производный от StatusCodeResult. Возвращает статусный код 400, тем самым указывая, что запрос некорректен
BadRequestObjectResult: производный от ObjectResult. Возвращает статусный код 400 с некоторой дополнительной информацией
OkResult: производный от StatusCodeResult. Возвращает статусный код 200, который уведомляет об успешном выполнении запроса
OkObjectResult: производный от ObjectResult. Возвращает статусный код 200 с некоторой дополнительной информацией
CreatedResult: возвращает статусный код 201, который уведомляет о создании нового ресурса. В качестве параметра принимает адрес нового ресурса
CreatedAtActionResult: возвращает статусный код 201, который уведомляет о создании нового ресурса. В качестве параметра принимает название метода и контроллера, а также параметров запроса, которые вместе создают адрес нового ресурса
CreatedAtRouteResult: возвращает статусный код 201, который уведомляет о создании нового ресурса. В качестве параметра принимает название маршрута, который используется для создания адреса нового ресурса
AcceptedResult: возвращает статусный код 202
AcceptedAtActionResult: возвращает статусный код 202. В качестве параметра принимает название метода и контроллера, а также параметров запроса
AcceptedAtRouteResult: возвращает статусный код 202. В качестве параметра принимает название и параметры маршрута
ChallengeResult: используется для проверки аутентификации пользователя
JsonResult: возвращает в качестве ответа объект или набор объектов в формате JSON
PartialViewResult: производит рендеринг частичного представления в выходной поток
RedirectResult: перенаправляет пользователя по другому адресу URL, возвращая статусный код 302 для временной переадресации или код 301 для постоянной переадресации зависимости от того, установлен ли флаг Permanent.
RedirectToRouteResult: класс работает подобно RedirectResult, но перенаправляет пользователя по определенному адресу URL, указанному через параметры маршрута
RedirectToActionResult: выполняет переадресацию на определенный метод контроллера
RedirectToPageResult: выполняет переадресацию на определенную странцу Razor (относится к подсистеме RazorPages)
LocalRedirectResult: перенаправляет пользователя по определенному адресу URL в рамках веб-приложения
ViewComponentResult: возвращает в ответ сущность ViewComponent
ViewResult: производит рендеринг представления и отправляет результаты рендеринга в виде html-страницы клиенту
####################
